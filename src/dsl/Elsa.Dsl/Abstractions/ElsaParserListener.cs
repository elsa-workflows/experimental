//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Projects/Elsa/experimental/src/dsl/Elsa.Dsl/Dsl\ElsaParser.g4 by ANTLR 4.9.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="ElsaParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.1")]
[System.CLSCompliant(false)]
public interface IElsaParserListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElsaParser.file"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFile([NotNull] ElsaParser.FileContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElsaParser.file"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFile([NotNull] ElsaParser.FileContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElsaParser.trigger"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTrigger([NotNull] ElsaParser.TriggerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElsaParser.trigger"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTrigger([NotNull] ElsaParser.TriggerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElsaParser.root"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRoot([NotNull] ElsaParser.RootContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElsaParser.root"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRoot([NotNull] ElsaParser.RootContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElsaParser.activity"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterActivity([NotNull] ElsaParser.ActivityContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElsaParser.activity"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitActivity([NotNull] ElsaParser.ActivityContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElsaParser.sequence"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSequence([NotNull] ElsaParser.SequenceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElsaParser.sequence"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSequence([NotNull] ElsaParser.SequenceContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElsaParser.varDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarDecl([NotNull] ElsaParser.VarDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElsaParser.varDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarDecl([NotNull] ElsaParser.VarDeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElsaParser.localVarDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLocalVarDecl([NotNull] ElsaParser.LocalVarDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElsaParser.localVarDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLocalVarDecl([NotNull] ElsaParser.LocalVarDeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElsaParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType([NotNull] ElsaParser.TypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElsaParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType([NotNull] ElsaParser.TypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElsaParser.methodCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodCall([NotNull] ElsaParser.MethodCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElsaParser.methodCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodCall([NotNull] ElsaParser.MethodCallContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElsaParser.funcCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFuncCall([NotNull] ElsaParser.FuncCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElsaParser.funcCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFuncCall([NotNull] ElsaParser.FuncCallContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElsaParser.args"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgs([NotNull] ElsaParser.ArgsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElsaParser.args"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgs([NotNull] ElsaParser.ArgsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElsaParser.arg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArg([NotNull] ElsaParser.ArgContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElsaParser.arg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArg([NotNull] ElsaParser.ArgContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElsaParser.block_statements"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock_statements([NotNull] ElsaParser.Block_statementsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElsaParser.block_statements"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock_statements([NotNull] ElsaParser.Block_statementsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElsaParser.block_pairs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock_pairs([NotNull] ElsaParser.Block_pairsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElsaParser.block_pairs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock_pairs([NotNull] ElsaParser.Block_pairsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElsaParser.pairList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPairList([NotNull] ElsaParser.PairListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElsaParser.pairList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPairList([NotNull] ElsaParser.PairListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElsaParser.pair"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPair([NotNull] ElsaParser.PairContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElsaParser.pair"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPair([NotNull] ElsaParser.PairContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>if</c>
	/// labeled alternative in <see cref="ElsaParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIf([NotNull] ElsaParser.IfContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>if</c>
	/// labeled alternative in <see cref="ElsaParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIf([NotNull] ElsaParser.IfContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>for</c>
	/// labeled alternative in <see cref="ElsaParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFor([NotNull] ElsaParser.ForContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>for</c>
	/// labeled alternative in <see cref="ElsaParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFor([NotNull] ElsaParser.ForContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>return</c>
	/// labeled alternative in <see cref="ElsaParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturn([NotNull] ElsaParser.ReturnContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>return</c>
	/// labeled alternative in <see cref="ElsaParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturn([NotNull] ElsaParser.ReturnContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>blockStatements</c>
	/// labeled alternative in <see cref="ElsaParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlockStatements([NotNull] ElsaParser.BlockStatementsContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>blockStatements</c>
	/// labeled alternative in <see cref="ElsaParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlockStatements([NotNull] ElsaParser.BlockStatementsContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>variableDeclaration</c>
	/// labeled alternative in <see cref="ElsaParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableDeclaration([NotNull] ElsaParser.VariableDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>variableDeclaration</c>
	/// labeled alternative in <see cref="ElsaParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableDeclaration([NotNull] ElsaParser.VariableDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>localVariableDeclaration</c>
	/// labeled alternative in <see cref="ElsaParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLocalVariableDeclaration([NotNull] ElsaParser.LocalVariableDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>localVariableDeclaration</c>
	/// labeled alternative in <see cref="ElsaParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLocalVariableDeclaration([NotNull] ElsaParser.LocalVariableDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>assignment</c>
	/// labeled alternative in <see cref="ElsaParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignment([NotNull] ElsaParser.AssignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>assignment</c>
	/// labeled alternative in <see cref="ElsaParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignment([NotNull] ElsaParser.AssignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>expression</c>
	/// labeled alternative in <see cref="ElsaParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] ElsaParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>expression</c>
	/// labeled alternative in <see cref="ElsaParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] ElsaParser.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>add</c>
	/// labeled alternative in <see cref="ElsaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAdd([NotNull] ElsaParser.AddContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>add</c>
	/// labeled alternative in <see cref="ElsaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAdd([NotNull] ElsaParser.AddContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>parentheses</c>
	/// labeled alternative in <see cref="ElsaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParentheses([NotNull] ElsaParser.ParenthesesContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>parentheses</c>
	/// labeled alternative in <see cref="ElsaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParentheses([NotNull] ElsaParser.ParenthesesContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>compare</c>
	/// labeled alternative in <see cref="ElsaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCompare([NotNull] ElsaParser.CompareContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>compare</c>
	/// labeled alternative in <see cref="ElsaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCompare([NotNull] ElsaParser.CompareContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>methodInvocation</c>
	/// labeled alternative in <see cref="ElsaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodInvocation([NotNull] ElsaParser.MethodInvocationContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>methodInvocation</c>
	/// labeled alternative in <see cref="ElsaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodInvocation([NotNull] ElsaParser.MethodInvocationContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>subtract</c>
	/// labeled alternative in <see cref="ElsaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSubtract([NotNull] ElsaParser.SubtractContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>subtract</c>
	/// labeled alternative in <see cref="ElsaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSubtract([NotNull] ElsaParser.SubtractContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>variableReference</c>
	/// labeled alternative in <see cref="ElsaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableReference([NotNull] ElsaParser.VariableReferenceContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>variableReference</c>
	/// labeled alternative in <see cref="ElsaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableReference([NotNull] ElsaParser.VariableReferenceContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>increment</c>
	/// labeled alternative in <see cref="ElsaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIncrement([NotNull] ElsaParser.IncrementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>increment</c>
	/// labeled alternative in <see cref="ElsaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIncrement([NotNull] ElsaParser.IncrementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>brackets</c>
	/// labeled alternative in <see cref="ElsaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBrackets([NotNull] ElsaParser.BracketsContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>brackets</c>
	/// labeled alternative in <see cref="ElsaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBrackets([NotNull] ElsaParser.BracketsContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>not</c>
	/// labeled alternative in <see cref="ElsaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNot([NotNull] ElsaParser.NotContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>not</c>
	/// labeled alternative in <see cref="ElsaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNot([NotNull] ElsaParser.NotContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>stringValue</c>
	/// labeled alternative in <see cref="ElsaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStringValue([NotNull] ElsaParser.StringValueContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>stringValue</c>
	/// labeled alternative in <see cref="ElsaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStringValue([NotNull] ElsaParser.StringValueContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>negate</c>
	/// labeled alternative in <see cref="ElsaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNegate([NotNull] ElsaParser.NegateContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>negate</c>
	/// labeled alternative in <see cref="ElsaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNegate([NotNull] ElsaParser.NegateContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>decrement</c>
	/// labeled alternative in <see cref="ElsaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDecrement([NotNull] ElsaParser.DecrementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>decrement</c>
	/// labeled alternative in <see cref="ElsaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDecrement([NotNull] ElsaParser.DecrementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>functionCall</c>
	/// labeled alternative in <see cref="ElsaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionCall([NotNull] ElsaParser.FunctionCallContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>functionCall</c>
	/// labeled alternative in <see cref="ElsaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionCall([NotNull] ElsaParser.FunctionCallContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>integerValue</c>
	/// labeled alternative in <see cref="ElsaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIntegerValue([NotNull] ElsaParser.IntegerValueContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>integerValue</c>
	/// labeled alternative in <see cref="ElsaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIntegerValue([NotNull] ElsaParser.IntegerValueContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>multiply</c>
	/// labeled alternative in <see cref="ElsaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultiply([NotNull] ElsaParser.MultiplyContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>multiply</c>
	/// labeled alternative in <see cref="ElsaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultiply([NotNull] ElsaParser.MultiplyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ElsaParser.exprList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprList([NotNull] ElsaParser.ExprListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ElsaParser.exprList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprList([NotNull] ElsaParser.ExprListContext context);
}
